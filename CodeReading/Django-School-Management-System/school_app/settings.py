"""
Django settings for school_app project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
#os.path.dirname(__file__)返回当前文件所在的目录，os.path.abspath(__file__)返回当前文件的绝对路径，os.path.dirname()返回文件所在的目录。

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "__$1ud47e&nyso5h5o3fwnqu4+hfqcply9h$k*h2s34)hn5@nc"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    "widget_tweaks",
    "apps.corecode",
    "apps.students",
    "apps.staffs",
    "apps.finance",
    "apps.result",
]
# INSTALLED_APPS 是一个列表，用于存放 Django 项目中安装的应用程序。
# INSTALLED_APPS 中的每个应用程序都必须是一个 Python 包，这个包中必须包含一个 apps.py 文件，这个文件中必须包含一个 AppConfig 类。
# INSTALLED_APPS 中的每个应用程序都必须在 INSTALLED_APPS 列表中注册，否则 Django 无法找到这个应用程序。
# INSTALLED_APPS 中的每个应用程序都必须在 settings.py 中注册，否则 Django 无法找到这个应用程序。

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "apps.corecode.middleware.SiteWideConfigs",
]
# MIDDLEWARE 是一个列表，用于存放 Django 项目中安装的中间件。
# MIDDLEWARE 中的每个中间件都必须是一个 Python 包，这个包中必须包含一个 middleware.py 文件，这个文件中必须包含一个 Middleware 类。
# MIDDLEWARE 中的每个中间件都必须在 MIDDLEWARE 列表中注册，否则 Django 无法找到这个中间件。

ROOT_URLCONF = "school_app.urls"
# ROOT_URLCONF 是一个字符串，用于存放 Django 项目中的 URL 配置文件。
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "apps.corecode.context_processors.site_defaults",
            ],
        },
    },
]
# TEMPLATES 是一个列表，用于存放 Django 项目中的模板配置。
# TEMPLATES 中的每个模板都必须是一个 Python 包，这个包中必须包含一个 template.py 文件，这个文件中必须包含一个 Template 类。

WSGI_APPLICATION = "school_app.wsgi.application"
# WSGI_APPLICATION 是一个字符串，用于存放 Django 项目中的 WSGI 配置文件。

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}
# DATABASES 是一个字典，用于存放 Django 项目中的数据库配置。


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]
# AUTH_PASSWORD_VALIDATORS 是一个列表，用于存放 Django 项目中的密码验证器。


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10240

STATIC_URL = "/static/"

STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)

STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

MEDIA_ROOT = os.path.join(BASE_DIR, "media")

MEDIA_URL = "/media/"

LOGIN_REDIRECT_URL = "/"

LOGOUT_REDIRECT_URL = "/"


SESSION_SAVE_EVERY_REQUEST = True

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

SESSION_COOKIE_AGE = 10800


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "file": {
            "level": "INFO",
            "class": "logging.handlers.TimedRotatingFileHandler",
            "when": "W6",
            "interval": 4,
            "backupCount": 3,
            "encoding": "utf8",
            "filename": os.path.join(BASE_DIR, "debug.log"),
            "formatter": "verbose",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": "INFO",
            "propagate": True,
        },
    },
}
# LOGGING 存放 Django 项目中的日志配置。
# 级别从低到高分别为 DEBUG、INFO、WARNING、ERROR、CRITICAL，级别越高，表示记录的信息越重要。
DEFAULT_AUTO_FIELD = "django.db.models.AutoField"

# Site Default values
